@using MasiYellow.Infrastructure
@using MasiYellow.Models
@using Microsoft.Extensions.Logging
@inject AuthorizationManager AuthManager
@inject ILogger<NavMenu> Logger

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">MasiYellow</a>
    <button class="navbar-toggler">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div>

    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        @if (!AuthManager.Authorized)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="oi oi-account-login" aria-hidden="true"></span> SignIn
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="register">
                    <span class="oi oi-plus" aria-hidden="true"></span> Register
                </NavLink>
            </li>
        }
        else
        {
            @if (AuthManager.CurrentUserRole == UserRole.Moderator)
             {
                 <li class="nav-item px-3">
                     <NavLink class="nav-link" href="userManagement">
                         <span class="oi oi-person" aria-hidden="true"></span> User Management
                     </NavLink>
                 </li>
                 <li class="nav-item px-3">
                     <NavLink class="nav-link" href="postionManagement">
                         <span class="oi oi-tablet" aria-hidden="true"></span> Position Management
                     </NavLink>
                 </li>
             }

            @if (AuthManager.CurrentUserRole >= UserRole.Redactor)
             {
                 <li class="nav-item px-3">
                     <NavLink class="nav-link" href="testsManagement">
                         <span class="oi oi-question-mark" aria-hidden="true"></span> Tests Management
                     </NavLink>
                 </li>
             }

            @if (AuthManager.CurrentUserRole == UserRole.User)
             {
                 <li class="nav-item px-3">
                     <NavLink class="nav-link" href="choosePosition">
                         <span class="oi oi-pencil" aria-hidden="true"></span> Solve Test
                     </NavLink>
                 </li>
             }

            <li class="nav-item px-3">
                <a class="nav-link" href="" onclick="@LogOut">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                </a>
            </li>
        }

    </ul>
</div>

@functions {

    protected override void OnInit()
    {
        Logger.LogInformation("Initializing");
        AuthManager.AuthChanged += (_, v) =>
        {
            Logger.LogInformation($"Updating to auth state {v}");
            StateHasChanged();
        };
    }

    public void OnAuthChanged(object sender, bool value)
    {
        StateHasChanged();
    }

    void LogOut()
    {
        AuthManager.SignOut();
    }

}